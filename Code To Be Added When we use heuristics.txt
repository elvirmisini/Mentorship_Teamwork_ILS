
        // contributors.sort((c1, c2) -> Double.compare(c2.getCombinedScore(),
        // c1.getCombinedScore()));
        //

        /**
         * This sort is used for the c instance (collaborations) - it gives the score:
         * 116985
         **/
        // Sort the projects by score (desc) and bestBefore (asc)
        // projects.sort((p1, p2) -> {
        // // Compare by score
        // int scoreComparison = Integer.compare(p2.getScore(), p1.getScore());
        // if (scoreComparison != 0) {
        // return scoreComparison;
        // }
        // // Scores are equal, compare by bestBefore
        // return Integer.compare(p1.getBestBefore(), p2.getBestBefore());
        // });

        /**
         * This sort is used for the e instance (exceptional skills) - it gives the
         * score: 1551509
         **/
        // projects.sort((p1, p2) -> Double.compare(p2.getPriorityScore(),
        // p1.getPriorityScore()));

        /**
         * This sort is used for the f instance (great mentors) - it gives the score:
         * 176150
         **/
        // projects.sort(Comparator.comparing(Project::getSkillLevels));